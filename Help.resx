<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>