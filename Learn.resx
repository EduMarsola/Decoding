<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>